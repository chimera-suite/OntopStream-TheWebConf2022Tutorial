version: "2.2"
services:
  sql-client:
    hostname: sql-client
    container_name: sql-client
    image: flink-sql-custom:latest
    ports:
      - "8073:8083"
    depends_on:
      - kafka
      - jobmanager
      - zookeeper
    environment:
      FLINK_JOBMANAGER_HOST: jobmanager
      KAFKA_BOOTSTRAP: kafka
      ZOOKEEPER_CONNECT: zookeeper
    volumes:
       - ./flink/flink-sql-gateway-0.2-SNAPSHOT:/opt/flink-sql-gateway-0.2-SNAPSHOT
       - ./flink/sql-client-conf.yaml:/opt/flink/conf/sql-client-conf.yaml
       - ./flink/sql-client-conf.yaml:/opt/flink/conf/sql-client-defaults.yaml

  jobmanager:
    hostname: jobmanager
    container_name: jobmanager
    image: flink:1.11.1-scala_2.11
    ports:
      - "443:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 3g
        taskmanager.memory.process.size: 3g    

  taskmanager:
    hostname: taskmanager
    container_name: taskmanager
    image: flink:1.11.1-scala_2.11
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 3
        taskmanager.memory.process.size: 3g

  zookeeper:
      image: confluentinc/cp-zookeeper:6.1.1
      container_name: zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.1.1
    container_name: kafka
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # Useful settings for development/laptop use - modify as needed for Prod
      # This one makes ksqlDB feel a bit more responsive when queries start running
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      
  jupyter:
    image: jupyter/base-notebook:lab-3.2.5
    hostname: jupyter
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      - GRANT_SUDO=yes
      - JUPYTER_TOKEN=TEST
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./jupyter:/home/jovyan

networks: 
  default:
    name: TEST-net
