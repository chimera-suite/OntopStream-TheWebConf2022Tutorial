Testing non catalogato per utils....



transformerEntity='http://www.rse-web.it/resource#GADIO_TR1'
#transformerEntity='http://www.rse-web.it/resource#NORD_TR3'
endpoint="http://jena:3030/test"


r1={'head': {'vars': ['time', 'timeUX', 'transformer', 'voltage', 'realPower', 'reactivePower', 'temp', 'wind', 'rain', 'tempPred24', 'windPred24', 'rainPred24', 'tStart', 'tEnd']}, 'results': {'bindings': [{'time': {'type': 'literal', 'value': '2019-01-01 04'}, 'timeUX': {'type': 'literal', 'value': '1546315200', 'datatype': 'http://www.w3.org/2001/XMLSchema#long'}, 'transformer': {'type': 'uri', 'value': 'http://www.rse-web.it/resource#GADIO_TR1'}, 'voltage': {'type': 'literal', 'value': '22.934963', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'realPower': {'type': 'literal', 'value': '14563.2', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'reactivePower': {'type': 'literal', 'value': '-355.90845', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'temp': {'type': 'literal', 'value': '5.866667', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'wind': {'type': 'literal', 'value': '0.9', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'rain': {'type': 'literal', 'value': '0.0', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'tempPred24': {'type': 'literal', 'value': '5.4', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'windPred24': {'type': 'literal', 'value': '2.05', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'rainPred24': {'type': 'literal', 'value': '0.0', 'datatype': 'http://www.w3.org/2001/XMLSchema#float'}, 'tStart': {'type': 'literal', 'value': '2019-01-01 05'}, 'tEnd': {'type': 'literal', 'value': '2019-01-01 07'}}]}}
r2={
  "head": {
    "vars": [ "cimName" , "y" , "z" ]
  } ,
  "results": {
    "bindings": [
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" } ,
        "z": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#PowerTransformer" }
      } ,
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" } ,
        "z": { "type": "uri" , "value": "http://www.w3.org/2002/07/owl#NamedIndividual" }
      } ,
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#Equipment.EquipmentContainer" } ,
        "z": { "type": "uri" , "value": "file:/home/matbelcao/Scrivania/RSE-StremingAnalytics/a2a_02_03_2015.xml#_bfcd8bd7-f79a-4a07-b5ad-2e28142dd012" }
      } ,
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#IdentifiedObject.name" } ,
        "z": { "type": "literal" , "value": "GAT1-23" }
      } ,
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" } ,
        "z": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#PowerTransformer" }
      } ,
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#IdentifiedObject.name" } ,
        "z": { "type": "literal" , "value": "GAT1-23" }
      }
    ]
  }
}
r3={
  "head": {
    "vars": [ "cimName" , "y" , "z" ]
  } ,
  "results": {
    "bindings": [
      {
        "cimName": { "type": "literal" , "value": "GAT1-23" } ,
        "y": { "type": "uri" , "value": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" } ,
        "z": { "type": "uri" , "value": "http://iec.ch/TC57/2010/CIM-schema-cim15#PowerTransformer" }
      }
    ]
  }
}
r4={
  "head": {
    "vars": [ "cimName" , "y" , "z" ]
  } ,
  "results": {
    "bindings": []
  }
}

print("-----------LEFT JOIN------------")
for res in leftJoinJSONResults(r1,r2):
    print(res)
print("-----------------------")
for res in leftJoinJSONResults(r1,r3):
    print(res)
print("-----------------------")
for res in leftJoinJSONResults(r1,r4):
    print(res)
print("-----------INNER JOIN------------")
for res in innerJoinJSONResults(r1,r3):
    print(res)
print("-----------------------")
for res in innerJoinJSONResults(r1,r4):
    print(res)
    
    
    
    
    
---------------------------TEST2------------------------